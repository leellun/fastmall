<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newland.mall.mapper.GoodsProductMapper">
  <resultMap id="BaseResultMap" type="com.newland.mall.entity.GoodsProduct">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="product_sn" jdbcType="VARCHAR" property="productSn" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap id="ResultWithSpecMap" type="com.newland.mall.model.vo.GoodsProductVo" extends="com.newland.mall.mapper.GoodsProductMapper.BaseResultMap">
    <collection property="goodsProductSpecRelations" columnPrefix="spec_" resultMap="com.newland.mall.mapper.GoodsProductSpecRelationMapper.BaseResultMap">
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, goods_id, product_sn, price, number, url, create_time, update_time, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mall_goods_product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mall_goods_product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.newland.mall.entity.GoodsProduct">
    insert into mall_goods_product (id, goods_id, product_sn,
    price, number, url,
    create_time, update_time, deleted
    )
    values (#{id,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, #{productSn,jdbcType=VARCHAR},
    #{price,jdbcType=DECIMAL}, #{number,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.newland.mall.entity.GoodsProduct">
    insert into mall_goods_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="productSn != null">
        product_sn,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="productSn != null">
        #{productSn,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.newland.mall.entity.GoodsProduct">
    update mall_goods_product
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="productSn != null">
        product_sn = #{productSn,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newland.mall.entity.GoodsProduct">
    update mall_goods_product
    set goods_id = #{goodsId,jdbcType=BIGINT},
    product_sn = #{productSn,jdbcType=VARCHAR},
    price = #{price,jdbcType=DECIMAL},
    number = #{number,jdbcType=INTEGER},
    url = #{url,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="deleteLogicalByPrimaryKey" parameterType="java.lang.Long">
    update mall_goods_product
    set deleted = 1 where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateStock" parameterType="map">
    update mall_goods_product
    set number = number + #{num,jdbcType=INTEGER}, update_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="reduceStock">
    update mall_goods_product
    set number = number - #{number,jdbcType=INTEGER}, update_time = now()
    where id = #{id} and number >= #{number}
  </update>
  <select id="listByGoodsId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mall_goods_product
    where goods_id = #{goodsId} and deleted =0
  </select>
  <select id="listWithSpecByGoodsId" resultMap="ResultWithSpecMap">
    select
    t1.id, t1.goods_id, t1.product_sn, t1.price, t1.number, t1.url,
    t2.id as spec_id, t2.spec_id as spec_spec_id, t2.product_id as spec_product_id, t2.item_sort as spec_item_sort, t2.name as spec_name, t2.value as spec_value
    from mall_goods_product t1 left join mall_goods_product_spec_relation t2 on t1.id=t2.product_id
    where t1.goods_id = #{goodsId} and t1.deleted = 0
  </select>
  <select id="count" resultType="java.lang.Long">
    select count(1) from mall_goods_product and deleted = 0
  </select>
  <delete id="deleteByIds" >
    update mall_goods_product
    set deleted = 1
    where id in <foreach collection="productIds" item="id" open="(" separator="," close=")">#{id}</foreach>
  </delete>
</mapper>